#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üîç Running comprehensive pre-commit checks with all tests..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}üìù $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# 1. Type checking
print_status "Type checking..."
npm run type-check
if [ $? -ne 0 ]; then
    print_error "Type checking failed. Please fix TypeScript errors before committing."
    exit 1
fi
print_success "Type checking passed"

# 2. Linting
print_status "Linting code..."
npm run lint
if [ $? -ne 0 ]; then
    print_warning "Linting failed, but allowing commit to proceed."
    print_warning "Please fix linting issues when convenient."
fi

# 3. Code formatting
print_status "Checking code formatting..."
npm run format:check
if [ $? -ne 0 ]; then
    print_warning "Code formatting check failed, but allowing commit to proceed."
    print_warning "Please run 'npm run format' to fix formatting issues when convenient."
fi

# 4. Unit tests
print_status "Running unit tests..."
npm run test:ci
if [ $? -ne 0 ]; then
    print_warning "Unit tests failed, but allowing commit to proceed."
    print_warning "Please fix failing tests when convenient."
fi

# 5. Accessibility tests
print_status "Running accessibility tests..."
npm run test:a11y
if [ $? -ne 0 ]; then
    print_warning "Accessibility tests failed, but allowing commit to proceed."
    print_warning "Please fix accessibility issues when convenient."
fi

# 6. E2E tests
print_status "Running E2E tests..."
npm run test:e2e
if [ $? -ne 0 ]; then
    print_warning "E2E tests failed, but allowing commit to proceed."
    print_warning "Please fix failing E2E tests when convenient."
fi

# 7. Component tests
print_status "Running component tests..."
npm run test:component
if [ $? -ne 0 ]; then
    print_warning "Component tests failed, but allowing commit to proceed."
    print_warning "Please fix failing component tests when convenient."
fi

# 8. Build check
print_status "Checking build..."
npm run build -- --no-lint
if [ $? -ne 0 ]; then
    print_error "Build failed. Please fix build errors before committing."
    exit 1
fi
print_success "Build check passed"

print_success "All comprehensive checks completed! Proceeding with commit..."
print_warning "Note: Some tests, linting, or formatting may have failed, but essential checks (type checking and build) passed."