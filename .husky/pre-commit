#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üîç Running comprehensive pre-commit checks with ZERO tolerance for warnings..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}üìù $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# 1. TypeScript type checking (REQUIRED - will block commit if fails)
print_status "1. TypeScript type checking (main source files only)..."
npm run type-check:main
if [ $? -ne 0 ]; then
    print_error "Type checking failed. Please fix TypeScript errors in main source files before committing."
    exit 1
fi
print_success "1. TypeScript type checking passed"

# 2. Linting (REQUIRED - will block commit if fails)
print_status "2. ESLint code linting..."
npm run lint
if [ $? -ne 0 ]; then
    print_error "Linting failed. Please fix ALL linting errors and warnings before committing."
    exit 1
fi
print_success "2. ESLint linting passed"

# 3. Code formatting (REQUIRED - will block commit if fails)
print_status "3. Prettier code formatting check..."
npm run format:check
if [ $? -ne 0 ]; then
    print_error "Code formatting check failed. Please run 'npm run format' to fix formatting issues before committing."
    exit 1
fi
print_success "3. Code formatting check passed"

# 4. Unit tests (REQUIRED - will block commit if fails)
print_status "4. Unit tests (Jest)..."
npm run test:ci
if [ $? -ne 0 ]; then
    print_error "Unit tests failed. Please fix ALL failing tests before committing."
    exit 1
fi
print_success "4. Unit tests passed"

# 5. Accessibility tests (REQUIRED - will block commit if fails)
print_status "5. Accessibility tests (jest-axe)..."
npm run test:a11y
if [ $? -ne 0 ]; then
    print_error "Accessibility tests failed. Please fix ALL accessibility issues before committing."
    exit 1
fi
print_success "5. Accessibility tests passed"

# 6. E2E tests (REQUIRED - will block commit if fails)
print_status "6. End-to-End tests (Cypress)..."
npm run test:e2e
if [ $? -ne 0 ]; then
    print_error "E2E tests failed. Please fix ALL failing E2E tests before committing."
    exit 1
fi
print_success "6. E2E tests passed"

# 7. Component tests (REQUIRED - will block commit if fails)
print_status "7. Component tests (Cypress Component)..."
npm run test:component
if [ $? -ne 0 ]; then
    print_error "Component tests failed. Please fix ALL failing component tests before committing."
    exit 1
fi
print_success "7. Component tests passed"

# 8. Build check (REQUIRED - will block commit if fails)
print_status "8. Next.js build verification..."
npm run build
if [ $? -ne 0 ]; then
    print_error "Build failed. Please fix build errors before committing."
    exit 1
fi
print_success "8. Next.js build verification passed"

echo ""
print_success "üéâ All comprehensive checks passed with ZERO warnings or errors!"
print_success "üìã Summary:"
print_success "   ‚úÖ ALL CHECKS (1-8): TypeScript (main only), Linting, Formatting, Tests, Build - PASSED"
print_success "   üö´ ZERO TOLERANCE: No warnings or errors allowed"
print_success "   üí° Code quality maintained at highest standards"
